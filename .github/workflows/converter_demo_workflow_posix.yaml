name: Python ECAT Test
on:
  push:
  pull_request:
    branches:
      - main
  
jobs:
  Collect-Data-and-Test:
    runs-on: ubuntu-latest
    
    env:
      ECAT_URL: https://openneuro.org/crn/datasets/ds003773/snapshots/1.0.0/files/sourcedata:ecat73:cimbi36.tar.gz
      ECAT_TEST_FOLDER: "cimbi36"
      REAL_TEST_ECAT_PATH: cimbi36/Gris_102_19_2skan-2019.04.30.13.04.41_em_3d.v
      SMALLER_ECAT_PATH: ${{ github.workspace }}/PETdata_in/Siemens_ecat/ECAT7_multiframe.v
      TEST_ECAT_PATH: ${{ github.workspace }}/python/tests/ECAT7_multiframe.v
      OUTPUT_NIFTI_PATH: ${{ github.workspace}}/python/tests/ECAT7_multiframe.nii
      READ_ECAT_SAVE_AS_MATLAB: ${{ github.workspace }}/python/tests/ECAT7_multiframe.mat
      NIBABEL_READ_ECAT_SAVE_AS_MATLAB: ${{ github.workspace }}/python/tests/ECAT7_multiframe.nibabel.mat
      MATLAB_CODE_PATH: ${{ github.workspace }}/matlab    

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Cache ECAT
        id: cache-ecat
        uses: actions/cache@v2
        with:
          path: cimbi36
          key: ${{ runner.os }}-ecats

      - name: Collect Ecat Dataset w/ curl
        if: steps.cache-ecat.outputs.cache-hit != 'true'
        run: "curl -o ecat_test ${{ env.ECAT_URL }}"

      - name: Decompress dataset
        if: steps.cache-ecat.outputs.cache-hit != 'true'
        run: "tar xvzf ecat_test && rm ecat_test"
      
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Cache Python
        id: cache-python
        uses: actions/cache@master
        with:
          path: ${{ env.pythonLocation }}/lib/python${{ steps.setup-python.outputs.python-version }}/site-packages/*
          key: ${{runner.os}}-pip-${{ hashFiles('python/requirements.txt') }}
          restore-keys:
            ${{ runner.os }}-pip
            ${{ runner.os }}

      - name: Install Python Requirements
        if: steps.cache-python.outputs.cache-hit != 'true'
        run: pip install -r python/requirements.txt

      - name: Test CLI --help
        run: python python/main.py --help

      - name: Test CLI Ecat Dump
        run: "python python/main.py ${{ env.REAL_TEST_ECAT_PATH }} --dump"

      - name: Copy Test File(s) to tests/
        run: cp ${{ env.SMALLER_ECAT_PATH }} python/tests/

      - name: Test ecatread
        run: "cd python/ && python -m tests.test_ecatread"

      - name: Test helper_functions
        run: "cd python/ && python -m tests.test_helper_functions"

      - name: Test nifti write
        run: "cd python/ && python -m tests.test_nifti_write"

      - name: Test bytes
        run: "cd python/ && python -m tests.test_thisbytes"

